// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Event {
  id              Int       @id @unique @default(autoincrement())
  createdAt       DateTime  @default(now())
  title           String
  descriptionText String?
  descriptionHtml String?
  startDateTime   DateTime
  endDateTime     DateTime
  location        String
  hash            String
  series          Boolean
  limit           Int
  typeId          Int
  type            EventType @relation(fields: [typeId], references: [id])
  proposerEmail   String
  Notes           String[]

  proposer User @relation(fields: [proposerEmail], references: [email], onDelete: Cascade)

  RSVP           RSVP[]
  GoogleCalendar GoogleCalendar[]
  Slack          Slack[]
}

model User {
  email    String  @id @unique
  username String?
  firstName     String? // deprecate
  Event Event[]
  RSVP  RSVP[]
}

model EventType {
  id    Int     @unique @default(autoincrement())
  type  String
  emoji String
  Event Event[]
}

model RSVP {
  id            String @id @default(uuid())
  eventId       Int
  event         Event  @relation(fields: [eventId], references: [id])
  attendeeEmail String
  attendee      User   @relation(fields: [attendeeEmail], references: [email])

  attendees String[] // deprecate

  @@unique([eventId, attendeeEmail])
}

model GoogleCalendar {
  eventId        Int     @unique
  event          Event   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  gCalEventId    String?
  gCalCalendarId String
}

model Slack {
  eventId   Int     @unique
  event     Event   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  messageId String?
  channelId String
}
